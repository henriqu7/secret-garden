// Centereing an image in certain box
.ct-m-imageCenter{
  max-height: 100%;
  max-width: 100%;
  width: auto;
  height: auto;
  position: absolute;
  top:0;
  bottom:0;
  left:0;
  right:0;
  margin: auto;
}

//////////////////////////////////////////////
.ct-m-gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
  left bottom,
  left top,
  color-stop(0, @start),
  color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
  @start,
  @stop);
  background: -moz-linear-gradient(center bottom,
  @start 0%,
  @stop 100%);
  background: -o-linear-gradient(@stop,
  @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}
.ct-m-bwGradient(@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear,
  left bottom,
  left top,
  color-stop(0, rgb(@start,@start,@start)),
  color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,
  rgb(@start,@start,@start) 0%,
  rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,
  rgb(@start,@start,@start) 0%,
  rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),
  rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}
.ct-m-bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top: solid 1px @top-color;
  border-left: solid 1px @left-color;
  border-right: solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}
.ct-m-dropShadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.ct-m-rounded(@radius: 2px) {
  border-radius: @radius;
}
.ct-m-borderRadius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  border-top-right-radius: @topright;
  border-bottom-right-radius: @bottomright;
  border-bottom-left-radius: @bottomleft;
  border-top-left-radius: @topleft;
  .ct-m-backgroundClip(padding-box);
}
.ct-m-opacity(@opacity: 0.5) {
  -moz-opacity: @opacity;
  -khtml-opacity: @opacity;
  -webkit-opacity: @opacity;
  opacity: @opacity;
  @opperc: @opacity * 100;
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter: ~"alpha(opacity=@{opperc})";
}
.ct-m-transitionDuration(@duration: 0.2s) {
  -webkit-transition-duration: @duration;
  transition-duration: @duration;
}
.ct-m-transitionDelay(@delay: 0.3s){
  -webkit-transition-delay: @delay;
  transition-delay: @delay;
}
.ct-m-transform(...) {
  -webkit-transform: @arguments;
  -ms-transform: @arguments;
  transform: @arguments;
}
.ct-transition-default(@arg){
  -webkit-transition: @arg;
  transition: @arg;
}
.ct-m-rotation(@deg:5deg){
  .ct-m-transform(rotate(@deg));
}
.ct-m-scale(@ratio:1.5){
  .ct-m-transform(scale(@ratio));
}
.ct-m-transition(@type: all, @duration:0.2s, @ease:ease-out) {
  -webkit-transition: @type @duration @ease;
  transition: @type @duration @ease;
}
.ct-m-transitionDelay(@delay: 0.5s){
  -webkit-transition-delay: @delay; /* Safari */
  transition-delay: @delay;
}
.ct-m-innerShadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}
.ct-m-boxShadow(@arguments) {
  box-shadow: @arguments;
}
.ct-m-boxSizing(@sizing: border-box) {
  box-sizing: @sizing;
}
.ct-m-userSelect(@argument: none) {
  -webkit-user-select: @argument;
  -ms-user-select: @argument;
  user-select: @argument;
}
.ct-m-columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap: @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap: @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}
.ct-m-translate(@x:0, @y:0) {
  .ct-m-transform(translate(@x, @y));
}
.ct-m-backgroundClip(@argument: padding-box) {
  -webkit-background-clip: @argument;
  background-clip: @argument;
}

.ct-m-grayscale(@argument: 100%){
  -webkit-filter: grayscale(@argument);
  filter: grayscale(@argument);
}

.ct-m-backgroundSize(@size){
  background-size: @size;
}

.ct-m-size(@width; @height) {
  width: @width;
  height: @height;
}




// Mixin itself
.ct-m-clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.ct-placeholder(@placeholder-text-color) {
  &::-moz-placeholder           { color: @placeholder-text-color; } // Firefox
  &:-ms-input-placeholder       { color: @placeholder-text-color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: @placeholder-text-color; } // Safari and Chrome
}

.ct-placeholderTextTransform(@placeholder-text-transform){
  &::-moz-placeholder           { text-transform: @placeholder-text-transform; } // Firefox
  &:-ms-input-placeholder       { text-transform: @placeholder-text-transform; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { text-transform: @placeholder-text-transform; } // Safari and Chrome
}

.ct-backgroundRGBA(@bgColor, @alpha){
  background-color: rgb((@bgColor), (@bgColor), (@bgColor));
  background-color: rgba((@bgColor), (@bgColor), (@bgColor), @alpha);
}
.ct-mix-rgba(@bg-color-red, @bg-color-green, @bg-color-blue, @alpha){
  background-color: rgb(@bg-color-red, @bg-color-green, @bg-color-blue);
  background-color: rgba(@bg-color-red, @bg-color-green, @bg-color-blue, @alpha);
}

.ct-m-backface{
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.ct-m-animation(@name, @time, @method, @loop) {
  -webkit-animation: @name @time @method @loop;
  animation: @name @time @method @loop;
}